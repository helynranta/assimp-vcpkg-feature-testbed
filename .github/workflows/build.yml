name: build

on:
  push:
    branches: '**'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest,macos-latest,windows-latest]
        feature: [amf-importer,3ds-importer,ac-importer,ase-importer,assbin-importer,b3d-importer,bvh-importer,collada-importer,dxf-importer,csm-importer,hmp-importer,irrmesh-importer,irr-importer,lwo-importer,lws-importer,m3d-importer,md2-importer,md3-importer,md5-importer,mdc-importer,mdl-importer,nff-importer,ndo-importer,off-importer,obj-importer,ogre-importer,opengex-importer,ply-importer,ms3d-importer,cob-importer,blend-importer,ifc-importer,xgl-importer,fbx-importer,q3d-importer,q3bsp-importer,raw-importer,sib-importer,smd-importer,stl-importer,terragen-importer,3d-importer,x-importer,x3d-importer,gltf-importer,3mf-importer,mmd-importer,obj-exporter,opengex-exporter,ply-exporter,3ds-exporter,assbin-exporter,assxml-exporter,m3d-exporter,collada-exporter,stl-exporter,x-exporter,x3d-exporter,gltf-exporter,3mf-exporter,pbrt-exporter,assjson-exporter,step-exporter,fbx-exporter]

    name: ${{ matrix.os }} test feature ${{ matrix.feature }}
    runs-on: ${{ matrix.os }}

    env:
      VCPKG_FEATURE_FLAGS: manifests,versions,registries
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg
    steps:
      - uses: actions/checkout@v2
        name: checkout repository

      - uses: actions/checkout@v2
        with:
          repository: 'microsoft/vcpkg'
          path: ${{ github.workspace }}/vcpkg
        name: fetch vcpkg

      # Install latest CMake.
      - uses: lukka/get-cmake@latest
        name: install cmake

      - run: ${{ github.workspace }}/vcpkg/bootstrap-vcpkg.sh
        if: matrix.os != 'windows-latest'
        name: bootstrap vcpkg shell script

      - run: ${{ github.workspace }}/vcpkg/bootstrap-vcpkg.bat
        if: matrix.os == 'windows-latest'
        name: bootstrap vcpkg batch script

      - run: |
          sed -i 's/"features": [],/"features": [${{ matrix.feature }}]/' vcpkg.json
        shell: bash
        name: insert feature to be used

      - run: cmake ${{ github.workspace }} -G Ninja -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
        name: cmake configure

      - run: cmake --build .
        name: cmake build
